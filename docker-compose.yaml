version: '3.9'

services:
  auth:
    container_name: ${PROJECT_NAME}-app
    build:
      context: ./auth
      dockerfile: Dockerfile
    restart: always
    env_file:
      - .env
    expose:
      - ${APP_PORT}
    networks:
      custom_network:
    depends_on:
      - db-auth
      - redis-auth
      - nginx-auth

  db-auth:
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - postgres:/var/lib/postgresql/data
    env_file:
      - .env
    expose:
      - ${POSTGRES_PORT}
    networks:
      custom_network:

  redis-auth:
    container_name: ${PROJECT_NAME}-redis
    image: redis:7.0.10-alpine
    restart: always
    volumes:
      - redis:/data
    networks:
      custom_network:
    expose:
      - ${REDIS_PORT}

  nginx-auth:
    image: nginx:1.23.3
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
    networks:
      custom_network:
    ports:
      - ${NGINX_PORT}:${NGINX_PORT}

  test-db-auth:
    image: postgres:15.2-alpine
    restart: always
    volumes:
      - test-postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=web
      - POSTGRES_HOST=test-db-auth
      - POSTGRES_PORT=5432
      - POSTGRES_USER=test
      - POSTGRES_PASSWORD=123qwe
      - POSTGRES_DSN=postgresql://test:123qwe@test-db-auth:5432/web
    ports:
      - '5432:5432'


  test-redis-auth:
    container_name: ${PROJECT_NAME}-test-redis
    image: redis:7.0.10-alpine
    restart: always
    volumes:
      - test-redis:/data
    ports:
      - '6379:6379'

volumes:
  postgres:
  redis:
  test-postgres:
  test-redis:

networks:
  custom_network:
    external: True
